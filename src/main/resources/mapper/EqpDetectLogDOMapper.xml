<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tpson.kulu.gas.repository.EqpDetectLogDOMapper">
    <resultMap id="BaseResultMap" type="cn.tpson.kulu.gas.domain.EqpDetectLogDO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="eqp_id" jdbcType="INTEGER" property="eqpId"/>
        <result column="detect_value" jdbcType="NUMERIC" property="detectValue"/>
        <result column="detect_no" jdbcType="VARCHAR" property="detectNo"/>
        <result column="status" jdbcType="SMALLINT" property="status"/>
        <result column="is_deleted" jdbcType="BIT" property="deleted"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="type" jdbcType="SMALLINT" property="type"/>
    </resultMap>

    <sql id="fromSql">
        t.id, t.eqp_id, t.detect_value, t.detect_no, t.status, t.type, t.is_deleted, t.gmt_create, t.gmt_modified
        from t_eqp_detect_log t
    </sql>
    <sql id="fromTable">
        from t_eqp_detect_log t
    </sql>
    <sql id="whereSql">
        <where>
            <if test="id != null">
                AND t.id = #{id,jdbcType=INTEGER}
            </if>
            <if test="eqpId != null">
                AND t.eqp_id = #{eqpId,jdbcType=INTEGER}
            </if>
            <if test="detectValue != null">
                AND t.detect_value = #{detectValue,jdbcType=NUMERIC}
            </if>
            <if test="status != null">
                AND t.status = #{status,jdbcType=SMALLINT}
            </if>
            <if test="type != null">
                AND t.type = #{type,jdbcType=SMALLINT}
            </if>
            <if test="gmtCreate != null">
                AND t.gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
            </if>
            <if test="gmtModified != null">
                AND t.gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
            </if>
            <if test="deleted != null">
                AND t.is_deleted = #{deleted,jdbcType=BIT}
            </if>
            <if test="startTime != null">
                AND t.gmt_create &gt;= #{startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endTime != null">
                AND t.gmt_create &lt;= #{endTime,jdbcType=TIMESTAMP}
            </if>
        </where>
    </sql>
    <sql id="pageSql">
        <if test="offset != null">
            OFFSET #{offset,jdbcType=INTEGER}
        </if>
        <if test="limit != null">
            LIMIT #{limit,jdbcType=INTEGER}
        </if>
    </sql>
    <sql id="orderSql">
        ORDER BY t.gmt_modified DESC, t.id DESC
    </sql>
    <!--***************************************************************************************-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        update t_eqp_detect_log set is_deleted = true
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="cn.tpson.kulu.gas.domain.EqpDetectLogDO">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            SELECT nextval('t_eqp_detect_log_id_seq'::regclass)
        </selectKey>
        insert into t_eqp_detect_log (id, eqp_id, detect_value,
        detect_no, status, type, is_deleted, gmt_create, gmt_modified
        )
        values (#{id,jdbcType=INTEGER}, #{eqpId,jdbcType=INTEGER}, #{detectValue,jdbcType=NUMERIC},
        #{detectNo,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, #{type,jdbcType=SMALLINT}, #{deleted,jdbcType=BIT},
        #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="updateByPrimaryKey" parameterType="cn.tpson.kulu.gas.domain.EqpDetectLogDO">
        update t_eqp_detect_log
        <set>
            <if test="eqpId != null">
                eqp_id = #{eqpId,jdbcType=INTEGER},
            </if>
            <if test="detectValue != null">
                detect_value = #{detectValue,jdbcType=NUMERIC},
            </if>
            <if test="detectNo != null and detectNo != ''">
                detect_no = #{detectNo,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=SMALLINT},
            </if>
            <if test="deleted != null">
                is_deleted = #{deleted,jdbcType=BIT},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=SMALLINT}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER} AND is_deleted = false
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        where t.id = #{id,jdbcType=INTEGER} AND t.is_deleted = false
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        where t.is_deleted = false
        <include refid="orderSql"/>
    </select>

    <select id="selectByEqpId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        where t.eqp_id = #{eqpId,jdbcType=VARCHAR} AND t.is_deleted = false
    </select>

    <select id="selectByExample" parameterType="cn.tpson.kulu.gas.query.EqpDetectLogQuery" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        <if test="uid != null">
            INNER JOIN t_eqp te ON te.id = t.eqp_id AND te.uid = #{uid, jdbcType=INTEGER} AND te.is_deleted = false
        </if>
        <include refid="whereSql"/>
        <include refid="orderSql"/>
        <include refid="pageSql"/>
    </select>

    <select id="count" resultType="Integer">
        select count(t.*)
        <include refid="fromTable"/>
        where t.is_deleted = false
    </select>

    <select id="countByExample" parameterType="cn.tpson.kulu.gas.query.EqpDetectLogQuery" resultType="Integer">
        select count(t.*)
        <include refid="fromTable"/>
        <if test="uid != null">
            INNER JOIN t_eqp te ON te.id = t.eqp_id AND te.uid = #{uid, jdbcType=INTEGER} AND te.is_deleted = false
        </if>
        <include refid="whereSql"/>
    </select>

    <select id="search" parameterType="cn.tpson.kulu.gas.query.EqpDetectLogQuery" resultMap="BaseResultMap">
        <bind name="skey" value="'%' + _parameter.key + '%'"/>
        select
        <include refid="fromSql"/>
        INNER JOIN t_eqp te ON te.id = t.eqp_id AND te.is_deleted = false
        <where>
            te.eqp_no LIKE #{skey, jdbcType=VARCHAR}
            <if test="eqpType != null">
                OR te.type = #{eqpType, jdbcType=SMALLINT}
            </if>
            OR te.owner_name LIKE #{skey, jdbcType=VARCHAR}
            OR te.data_plate LIKE #{skey, jdbcType=VARCHAR}
            OR t.detect_no LIKE #{skey, jdbcType=VARCHAR}
        </where>
        <include refid="orderSql"/>
        <include refid="pageSql"/>
    </select>

    <select id="countBySearch" parameterType="cn.tpson.kulu.gas.query.EqpDetectLogQuery" resultType="Integer">
        <bind name="skey" value="'%' + _parameter.key + '%'"/>
        select count(t.*)
        <include refid="fromTable"/>
        INNER JOIN t_eqp te ON te.id = t.eqp_id AND te.is_deleted = false
        <where>
            te.eqp_no LIKE #{skey, jdbcType=VARCHAR}
            <if test="eqpType != null">
                OR te.type = #{eqpType, jdbcType=SMALLINT}
            </if>
            OR te.owner_name LIKE #{skey, jdbcType=VARCHAR}
            OR te.data_plate LIKE #{skey, jdbcType=VARCHAR}
            OR t.detect_no LIKE #{skey, jdbcType=VARCHAR}
        </where>
    </select>
</mapper>