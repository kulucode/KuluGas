<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tpson.kulu.gas.repository.EqpApplyDOMapper">
    <resultMap id="BaseResultMap" type="cn.tpson.kulu.gas.domain.EqpApplyDO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="phone_no" jdbcType="VARCHAR" property="phoneNo"/>
        <result column="addr" jdbcType="VARCHAR" property="addr"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="status" jdbcType="SMALLINT" property="status"/>
        <result column="type" jdbcType="SMALLINT" property="type"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="is_deleted" jdbcType="BIT" property="deleted"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
    </resultMap>

    <sql id="fromSql">
        t.id, t.uid, t.phone_no, t.addr, t.location, t.status, t.type, t.comment, t.is_deleted, t.gmt_create, t.gmt_modified
        from t_eqp_apply t
    </sql>
    <sql id="fromTable">
        from t_eqp_apply t
    </sql>
    <sql id="whereSql">
        <where>
            <if test="id != null">
                AND t.id = #{id,jdbcType=INTEGER}
            </if>
            <if test="uid != null">
                AND t.uid = #{uid,jdbcType=INTEGER}
            </if>
            <if test="phoneNo != null and phoneNo != ''">
                AND t.phone_no = #{phoneNo,jdbcType=VARCHAR}
            </if>
            <if test="addr != null and addr != ''">
                AND t.addr = #{addr,jdbcType=VARCHAR}
            </if>
            <if test="location != null and location != ''">
                AND t.location = #{location,jdbcType=VARCHAR}::jsonb
            </if>
            <if test="status != null">
                AND t.status = #{status,jdbcType=SMALLINT}
            </if>
            <if test="type != null">
                AND t.type = #{type,jdbcType=SMALLINT}
            </if>
            <if test="comment != null and comment != ''">
                AND t.comment = #{comment,jdbcType=VARCHAR}
            </if>
            <if test="deleted != null">
                AND t.is_deleted = #{deleted,jdbcType=BIT}
            </if>
            <if test="gmtCreate != null">
                AND t.gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
            </if>
            <if test="gmtModified != null">
                AND t.gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
            </if>
        </where>
    </sql>
    <sql id="pageSql">
        <if test="offset != null">
            OFFSET #{offset,jdbcType=INTEGER}
        </if>
        <if test="limit != null">
            LIMIT #{limit,jdbcType=INTEGER}
        </if>
    </sql>
    <sql id="orderSql">
        ORDER BY t.gmt_modified DESC, t.id DESC
    </sql>
    <!--***************************************************************************************-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        update t_eqp_apply set is_deleted = true
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="cn.tpson.kulu.gas.domain.EqpApplyDO">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            SELECT nextval('t_eqp_apply_id_seq'::regclass)
        </selectKey>
        insert into t_eqp_apply (id, uid, phone_no, addr, location, status, type, comment, is_deleted, gmt_create,
        gmt_modified)
        values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{phoneNo,jdbcType=VARCHAR},
        #{addr,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}::jsonb, #{status,jdbcType=SMALLINT},
        #{type,jdbcType=SMALLINT}, #{comment,jdbcType=VARCHAR}, #{deleted,jdbcType=BIT},
        #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
    </insert>

    <update id="updateByPrimaryKey" parameterType="cn.tpson.kulu.gas.domain.EqpApplyDO">
        update t_eqp_apply
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
            <if test="phoneNo != null and phoneNo != ''">
                phone_no = #{phoneNo,jdbcType=VARCHAR},
            </if>
            <if test="addr != null and addr != ''">
                addr = #{addr,jdbcType=VARCHAR},
            </if>
            <if test="location != null and location != ''">
                location = #{location,jdbcType=VARCHAR}::jsonb,
            </if>
            <if test="deleted != null">
                is_deleted = #{deleted,jdbcType=BIT},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=SMALLINT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=SMALLINT},
            </if>
            <if test="comment != null and comment != ''">
                comment = #{comment,jdbcType=VARCHAR}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER} AND is_deleted = false
    </update>

    <select id="selectByUid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        where t.uid = #{uid,jdbcType=INTEGER} AND t.is_deleted = false
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        where t.id = #{id,jdbcType=INTEGER} AND t.is_deleted = false
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        where t.is_deleted = false
        <include refid="orderSql"/>
    </select>

    <select id="selectByExample" parameterType="cn.tpson.kulu.gas.query.EqpApplyQuery" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        <include refid="whereSql"/>
        <include refid="orderSql"/>
        <include refid="pageSql" />
    </select>

    <select id="count" resultType="Integer">
        select count(t.*)
        <include refid="fromTable"/>
        where t.is_deleted = false
    </select>

    <select id="countByExample" parameterType="cn.tpson.kulu.gas.query.EqpApplyQuery" resultType="Integer">
        select count(t.*)
        <include refid="fromTable"/>
        <include refid="whereSql"/>
    </select>

    <insert id="insertApplyEqp" parameterType="java.util.Map">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            SELECT nextval('t_eqp_apply_eqp_id_seq'::regclass)
        </selectKey>
        insert into t_eqp_apply (id, apply_id, eqp_id)
        values (#{id,jdbcType=INTEGER}, #{apply_id,jdbcType=INTEGER}, #{eqp_id,jdbcType=INTEGER})
    </insert>
</mapper>