<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tpson.kulu.gas.repository.EqpDetectDOMapper">
    <resultMap id="BaseResultMap" type="cn.tpson.kulu.gas.domain.EqpDetectDO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="eqp_id" jdbcType="INTEGER" property="eqpId"/>
        <result column="log_id" jdbcType="INTEGER" property="logId"/>
        <result column="last_log_id" jdbcType="INTEGER" property="lastLogId"/>
        <result column="detect_value" jdbcType="NUMERIC" property="detectValue"/>
        <result column="detect_no" jdbcType="VARCHAR" property="detectNo"/>
        <result column="status" jdbcType="SMALLINT" property="status"/>
        <result column="type" jdbcType="SMALLINT" property="type"/>
        <result column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="is_deleted" jdbcType="BIT" property="deleted"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="gmt_last_detect" jdbcType="TIMESTAMP" property="gmtLastDetect"/>
        <result column="gmt_detect" jdbcType="TIMESTAMP" property="gmtDetect"/>
        <result column="lat" jdbcType="DOUBLE" property="lat"/>
        <result column="lon" jdbcType="DOUBLE" property="lon"/>
    </resultMap>

    <sql id="fromSql">
        t.id, t.eqp_id, t.log_id, t.last_log_id, t.detect_value, t.detect_no, t.status, t.type, t.uid, t.is_deleted, t.gmt_create, t.gmt_modified, t.gmt_last_detect, t.gmt_detect, t.lat, t.lon
        from t_eqp_detect t
    </sql>
    <sql id="fromTable">
        from t_eqp_detect t
    </sql>
    <sql id="whereSql">
        <where>
            <if test="id != null">
                AND t.id = #{id,jdbcType=INTEGER}
            </if>
            <if test="eqpId != null">
                AND t.eqp_id = #{eqpId,jdbcType=INTEGER}
            </if>
            <if test="logId != null">
                AND t.log_id = #{logId,jdbcType=INTEGER}
            </if>
            <if test="lastLogId != null">
                AND t.last_log_id = #{lastLogId,jdbcType=INTEGER}
            </if>
            <if test="detectValue != null">
                AND t.detect_value = #{detectValue,jdbcType=NUMERIC}
            </if>
            <if test="status != null">
                AND t.status = #{status,jdbcType=SMALLINT}
            </if>
            <if test="type != null">
                AND t.type = #{type,jdbcType=SMALLINT}
            </if>
            <if test="uid != null">
                AND t.uid = #{uid,jdbcType=INTEGER}
            </if>
            <if test="lat != null">
                AND t.lat = #{lat,jdbcType=DOUBLE}
            </if>
            <if test="lon != null">
                AND t.lon = #{lon,jdbcType=DOUBLE}
            </if>
            <if test="gmtCreate != null">
                AND t.gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
            </if>
            <if test="gmtModified != null">
                AND t.gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
            </if>
            <if test="gmtLastDetect != null">
                AND t.gmt_last_detect = #{gmtLastDetect,jdbcType=TIMESTAMP}
            </if>
            <if test="gmtDetect != null">
                AND t.gmt_detect = #{gmtDetect,jdbcType=TIMESTAMP}
            </if>

            <if test="st != null">
                AND t.gmt_create &gt;= #{st,jdbcType=TIMESTAMP}
            </if>
            <if test="et != null">
                AND t.gmt_create &lt;= #{et,jdbcType=TIMESTAMP}
            </if>

            <if test="disLevel != null and disLevel != ''">
                AND te.dis_level = #{disLevel, jdbcType=VARCHAR}
            </if>
            <if test="area != null and area != ''">
                AND loc.area LIKE '%'||#{area, jdbcType=VARCHAR}
            </if>
            <if test="eqpType != null">
                AND te.type = #{eqpType, jdbcType=SMALLINT}
            </if>
            <if test="key != null and key != ''">
                AND
                (
                te.eqp_no LIKE '%'||#{key, jdbcType=VARCHAR}||'%'
                <if test="eqpTypeKey != null">
                    OR te.type = #{eqpTypeKey, jdbcType=SMALLINT}
                </if>
                OR te.owner_name LIKE '%'||#{key, jdbcType=VARCHAR}||'%'
                OR te.data_plate LIKE '%'||#{key, jdbcType=VARCHAR}||'%'
                OR t.detect_no LIKE '%'||#{key, jdbcType=VARCHAR}||'%'
                )
            </if>
            AND t.is_deleted = false
        </where>
    </sql>
    <sql id="pageSql">
        <if test="offset != null">
            OFFSET #{offset,jdbcType=INTEGER}
        </if>
        <if test="limit != null">
            LIMIT #{limit,jdbcType=INTEGER}
        </if>
    </sql>
    <sql id="orderSql">
        ORDER BY t.gmt_modified DESC, t.id DESC
    </sql>
    <!--***************************************************************************************-->
    <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        update t_eqp_detect set is_deleted = true, gmt_modified = now()
        where id = #{id,jdbcType=INTEGER}
    </update>

    <insert id="insert" parameterType="cn.tpson.kulu.gas.domain.EqpDetectDO">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            SELECT nextval('t_eqp_detect_id_seq'::regclass)
        </selectKey>
        insert into t_eqp_detect (id, eqp_id, log_id, last_log_id, detect_value,
        detect_no, status, type, uid, is_deleted, gmt_create, gmt_modified, gmt_last_detect, gmt_detect, lat, lon
        )
        values (#{id,jdbcType=INTEGER}, #{eqpId,jdbcType=INTEGER}, #{logId,jdbcType=INTEGER},
        #{lastLogId,jdbcType=INTEGER}, #{detectValue,jdbcType=NUMERIC},
        #{detectNo,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, #{type,jdbcType=SMALLINT}, #{uid,jdbcType=INTEGER}, false,
        now(), now(), #{gmtLastDetect,jdbcType=TIMESTAMP}, #{gmtDetect,jdbcType=TIMESTAMP}, #{lat,jdbcType=DOUBLE}, #{lon,jdbcType=DOUBLE}
        )
    </insert>

    <update id="updateByPrimaryKey" parameterType="cn.tpson.kulu.gas.domain.EqpDetectDO">
        update t_eqp_detect
        <set>
            gmt_modified = now(),
            <if test="eqpId != null">
                eqp_id = #{eqpId,jdbcType=INTEGER},
            </if>
            <if test="logId != null">
                log_id = #{logId,jdbcType=INTEGER},
            </if>
            <if test="lastLogId != null">
                last_log_id = #{lastLogId,jdbcType=INTEGER},
            </if>
            <if test="detectValue != null">
                detect_value = #{detectValue,jdbcType=NUMERIC},
            </if>
            <if test="detectNo != null and detectNo != ''">
                detect_no = #{detectNo,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=SMALLINT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=SMALLINT},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
            <if test="lat != null">
                lat = #{lat,jdbcType=DOUBLE},
            </if>
            <if test="lon != null">
                lon = #{lon,jdbcType=DOUBLE},
            </if>
            <if test="deleted != null">
                is_deleted = #{deleted,jdbcType=BIT},
            </if>
            <if test="gmtLastDetect != null">
                gmt_last_detect = #{gmtLastDetect,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtDetect != null">
                gmt_detect = #{gmtDetect,jdbcType=TIMESTAMP}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER} AND is_deleted = false
    </update>

    <update id="updateLogByPrimaryKey" parameterType="cn.tpson.kulu.gas.domain.EqpDetectDO">
        update t_eqp_detect_log
        <set>
            gmt_modified = now(),
            <if test="eqpId != null">
                eqp_id = #{eqpId,jdbcType=INTEGER},
            </if>
            <if test="detectValue != null">
                detect_value = #{detectValue,jdbcType=NUMERIC},
            </if>
            <if test="detectNo != null and detectNo != ''">
                detect_no = #{detectNo,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=SMALLINT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=SMALLINT},
            </if>
            <if test="uid != null">
                uid = #{type,jdbcType=INTEGER},
            </if>
            <if test="lat != null">
                lat = #{lat,jdbcType=DOUBLE},
            </if>
            <if test="lon != null">
                lon = #{lon,jdbcType=DOUBLE},
            </if>
            <if test="deleted != null">
                is_deleted = #{deleted,jdbcType=BIT},
            </if>
        </set>
        where id = (SELECT log_id FROM t_eqp_detect WHERE id = #{id,jdbcType=INTEGER}) AND is_deleted = false
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        where t.id = #{id,jdbcType=INTEGER} AND t.is_deleted = false
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        where t.is_deleted = false
        <include refid="orderSql"/>
    </select>

    <select id="count" resultType="Integer">
        select count(t.*)
        <include refid="fromTable"/>
        where t.is_deleted = false
    </select>

    <select id="selectByEqpId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        where t.eqp_id = #{eqpId,jdbcType=VARCHAR} AND t.is_deleted = false
        ORDER BY t.gmt_modified DESC, t.id DESC
    </select>

    <select id="selectOneByEqpId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        where t.eqp_id = #{eqpId,jdbcType=INTEGER} AND t.is_deleted = false AND t.gmt_modified IS NOT NULL
        ORDER BY t.gmt_modified DESC, t.id DESC LIMIT 1
    </select>

    <select id="selectByExample" parameterType="cn.tpson.kulu.gas.query.EqpDetectQuery" resultMap="BaseResultMap">
         select
        <include refid="fromSql"/>
        INNER JOIN t_eqp te ON te.id = t.eqp_id AND te.is_deleted = false
        LEFT JOIN t_eqp_location_current loc ON loc.eqp_id = t.eqp_id AND loc.is_deleted = false
        <include refid="whereSql"/>
        <include refid="orderSql"/>
        <include refid="pageSql"/>
    </select>

    <select id="countByExample" parameterType="cn.tpson.kulu.gas.query.EqpDetectQuery" resultType="Integer">
        select count(t.*)
        <include refid="fromTable"/>
        INNER JOIN t_eqp te ON te.id = t.eqp_id AND te.is_deleted = false
        LEFT JOIN t_eqp_location_current loc ON loc.eqp_id = t.eqp_id AND loc.is_deleted = false
        <include refid="whereSql"/>
    </select>

    <select id="selectDetectValueByEqpId" parameterType="java.lang.Integer" resultType="java.lang.Double">
        select t.detect_value
        from t_eqp_detect t
        where t.eqp_id = #{eqpId,jdbcType=INTEGER} AND t.is_deleted = false AND t.gmt_modified IS NOT NULL
        ORDER BY t.gmt_modified DESC, t.id DESC LIMIT 1
    </select>
<!--
    <select id="search" parameterType="cn.tpson.kulu.gas.query.EqpDetectQuery" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        INNER JOIN t_eqp te ON te.id = t.eqp_id AND te.is_deleted = false
        <where>
            t.is_deleted = false AND
            (
            te.eqp_no LIKE '%'||#{key, jdbcType=VARCHAR}||'%'
            <if test="eqpType != null">
                OR te.type = #{eqpType, jdbcType=SMALLINT}
            </if>
            OR te.owner_name LIKE '%'||#{skey, jdbcType=VARCHAR}||'%'
            OR te.data_plate LIKE '%'||#{skey, jdbcType=VARCHAR}||'%'
            OR t.detect_no LIKE '%'||#{skey, jdbcType=VARCHAR}||'%'
            )
        </where>
        <include refid="orderSql"/>
        <include refid="pageSql"/>
    </select>

    <select id="countBySearch" parameterType="cn.tpson.kulu.gas.query.EqpDetectQuery" resultType="Integer">
        select count(t.*)
        <include refid="fromTable"/>
        INNER JOIN t_eqp te ON te.id = t.eqp_id AND te.is_deleted = false
        <where>
            t.is_deleted = false AND
            (
            te.eqp_no LIKE '%'||#{key, jdbcType=VARCHAR}||'%'
            <if test="eqpType != null">
                OR te.type = #{eqpType, jdbcType=SMALLINT}
            </if>
            OR te.owner_name LIKE '%'||#{key, jdbcType=VARCHAR}||'%'
            OR te.data_plate LIKE '%'||#{key, jdbcType=VARCHAR}||'%'
            OR t.detect_no LIKE '%'||#{key, jdbcType=VARCHAR}||'%'
            )
        </where>
    </select>
    -->
</mapper>