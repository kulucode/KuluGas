<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tpson.kulu.gas.repository.EqpDOMapper">
    <resultMap id="BaseResultMap" type="cn.tpson.kulu.gas.domain.EqpDO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="eqp_no" jdbcType="VARCHAR" property="eqpNo"/>
        <result column="brand" jdbcType="VARCHAR" property="brand"/>
        <result column="type" jdbcType="SMALLINT" property="type"/>
        <result column="age" jdbcType="SMALLINT" property="age"/>
        <result column="data_plate" jdbcType="VARCHAR" property="dataPlate"/>
        <result column="owner_name" jdbcType="VARCHAR" property="ownerName"/>
        <result column="is_deleted" jdbcType="BIT" property="deleted"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="apply_id" jdbcType="INTEGER" property="applyId"/>
    </resultMap>

    <sql id="fromSql">
        id, eqp_no, brand, type, age, data_plate, owner_name, apply_id, is_deleted, gmt_create, gmt_modified
        from t_eqp t
    </sql>
    <sql id="fromTable">
        from t_eqp t
    </sql>
    <sql id="whereSql">
        <where>
            <if test="id != null">
                AND t.id = #{id,jdbcType=INTEGER}
            </if>
            <if test="eqpNo != null">
                AND t.eqp_no = #{eqpNo,jdbcType=VARCHAR}
            </if>
            <if test="brand != null and brand != ''">
                AND t.brand = #{brand,jdbcType=VARCHAR}
            </if>
            <if test="type != null">
                AND t.type = #{type,jdbcType=SMALLINT}
            </if>
            <if test="age != null">
                AND t.age = #{age,jdbcType=SMALLINT}
            </if>
            <if test="dataPlate != null and dataPlate != ''">
                AND t.data_plate = #{dataPlate,jdbcType=VARCHAR}
            </if>
            <if test="ownerName != null and ownerName != ''">
                AND t.owner_name = #{ownerName,jdbcType=VARCHAR}
            </if>
            <if test="applyId != null">
                AND t.apply_id = #{applyId,jdbcType=INTEGER}
            </if>
            <if test="gmtCreate != null">
                AND t.gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
            </if>
            <if test="gmtModified != null">
                AND t.gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
            </if>
            <if test="deleted != null">
                AND t.is_deleted = #{deleted,jdbcType=BIT}
            </if>
        </where>
        <if test="offset != null">
            OFFSET #{offset,jdbcType=INTEGER}
        </if>
        <if test="limit != null">
            LIMIT #{limit,jdbcType=INTEGER}
        </if>
    </sql>
    <!--***************************************************************************************-->

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    update t_eqp set is_deleted = true
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="cn.tpson.kulu.gas.domain.EqpDO">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            SELECT nextval('t_eqp_id_seq'::regclass)
        </selectKey>
        insert into t_eqp (id, eqp_no, brand,
        type, age, data_plate,
        owner_name, is_deleted, gmt_create,
        gmt_modified, apply_id)
        values (#{id,jdbcType=INTEGER}, #{eqpNo,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR},
        #{type,jdbcType=SMALLINT}, #{age,jdbcType=SMALLINT}, #{dataPlate,jdbcType=VARCHAR},
        #{ownerName,jdbcType=VARCHAR}, #{deleted,jdbcType=BIT}, #{gmtCreate,jdbcType=TIMESTAMP},
        #{gmtModified,jdbcType=TIMESTAMP}, #{applyId,jdbcType=INTEGER})
    </insert>
    <update id="updateByPrimaryKey" parameterType="cn.tpson.kulu.gas.domain.EqpDO">
    update t_eqp
    set eqp_no = #{eqpNo,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      type = #{type,jdbcType=SMALLINT},
      age = #{age,jdbcType=SMALLINT},
      data_plate = #{dataPlate,jdbcType=VARCHAR},
      owner_name = #{ownerName,jdbcType=VARCHAR},
      is_deleted = #{deleted,jdbcType=BIT},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      apply_id = #{applyId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
    </select>

    <select id="selectByEqpNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        where t.eqp_no = #{eqpNo,jdbcType=VARCHAR}
    </select>

    <select id="selectByExample" parameterType="cn.tpson.kulu.gas.query.EqpQuery" resultMap="BaseResultMap">
        select
        <include refid="fromSql"/>
        <include refid="whereSql"/>
    </select>

    <select id="count" resultType="Integer">
        select count(*)
        <include refid="fromTable"/>
    </select>

    <select id="countByExample" parameterType="cn.tpson.kulu.gas.query.EqpQuery" resultType="Integer">
        select count(*)
        <include refid="fromTable"/>
        <include refid="whereSql"/>
    </select>
</mapper>